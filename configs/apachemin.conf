# Generally - we'll point to build tree - you may need to change this
# if you built elsewhere

# where we want to run tests from
Define RUNTOP "${RUNTOP}"

# run test based on local build or packages (if PACKAGES==1 in env)
Define "PACKAGING${PACKAGING}"
<IfDEfine !PACKAGING1>
    # build tree
    # Define ATOP "${HOME}/code/httpd"
    Define ATOP "${ATOP}"

    # Where various modules live
    Define MODTOP "${ATOP}/modules/
    Define AAAMODTOP ${MODTOP}/aaa/.libs
    Define METAMODTOP ${MODTOP}/metadata/.libs
    Define HTTPMODTOP ${MODTOP}/http/.libs
    Define LOGMODTOP ${MODTOP}/loggers/.libs
    Define MAPMODTOP ${MODTOP}/mappers/.libs
    Define UMODTOP ${MODTOP}/arch/unix/.libs
    Define SSLMODTOP ${MODTOP}/ssl/.libs
</IfDefine>
# packages version
<IfDefine PACKAGING1>
    # binary location
    Define ATOP "/usr/lib/apache2"

    # Where various modules live
    Define MODTOP "${ATOP}/modules/
    Define AAAMODTOP ${MODTOP}
    Define METAMODTOP ${MODTOP}
    Define HTTPMODTOP ${MODTOP}
    Define LOGMODTOP ${MODTOP}
    Define MAPMODTOP ${MODTOP}
    Define UMODTOP ${MODTOP}
    Define SSLMODTOP ${MODTOP}
</IfDefine>

ServerName example.com
Listen 9443

PidFile ${RUNTOP}/apache/logs/httpd.pid

#
# Optional Modules
#

# maybe built in now - configure seems to include it, we'll see...
# Provides allow, deny and order directives.
LoadModule authz_core_module ${AAAMODTOP}/mod_authz_core.so
LoadModule authz_host_module ${AAAMODTOP}/mod_authz_host.so
# Provides SetEnv directive.
LoadModule env_module ${METAMODTOP}/mod_env.so
# Provides automatic mime content type headers.
LoadModule mime_module ${HTTPMODTOP}/mod_mime.so
# Provides CustomLog and LogFormat directives.
<IfDefine !PACKAGING1>
    LoadModule log_config_module ${LOGMODTOP}/mod_log_config.so
</IfDefine>
# Allow rewrite rules in .htaccess files.
LoadModule rewrite_module ${MAPMODTOP}/mod_rewrite.so
<IfDefine !PACKAGING1>
    LoadModule unixd_module ${UMODTOP}/mod_unixd.so
</IfDefine>
# the meat...
LoadModule ssl_module ${SSLMODTOP}/mod_ssl.so
<IfDefine PACKAGING1>
    LoadModule mpm_event_module ${MODTOP}/mod_mpm_event.so
</IfDefine>

# Logging
LogLevel info
#LogLevel debug
LogFormat "%h %l %u %t %v \"%r\" %>s \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common
ErrorLog ${RUNTOP}/apache/logs/error.log
CustomLog ${RUNTOP}/apache/logs/access.log combined

# mime types here
TypesConfig /etc/mime.types

# Our TLS stuff - fake wildcard cert should work all over
SSLEngine On
SSLProtocol TLSv1.3
SSLECHKeyDir ${RUNTOP}/echkeydir
SSLCertificateFile ${RUNTOP}/cadir/example.com.crt
SSLCertificateKeyFile ${RUNTOP}/cadir/example.com.priv

# Our pretend virtual hosts
<VirtualHost *:9443>
    SSLEngine On
    SSLProtocol TLSv1.3
    ServerName example.com
    DocumentRoot "${RUNTOP}/apache/dir-example.com"
</VirtualHost>
<VirtualHost *:9443>
    SSLEngine On
    SSLProtocol TLSv1.3
    ServerName foo.example.com
    DocumentRoot "${RUNTOP}/apache/dir-foo.example.com"
</VirtualHost>


