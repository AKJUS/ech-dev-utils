# debug.log-request-handling = "enable"
# debug.log-condition-handling = "enable"

# RUNTOP is set by testlighttpd.sh
var.rootroot = env.RUNTOP

server.pid-file = rootroot + "/lighttpd/logs/lighttpd.pid"

server.document-root = rootroot + "/lighttpd/dir-foo.example.com"
var.log_root    = rootroot + "/lighttpd/logs"
server.errorlog = log_root + "/error.log"

server.port = 3481

# logging is handy to see how we're doing
server.modules += ( "mod_accesslog" )
accesslog.filename          = log_root + "/access.log"
# add the port number after the host to access log lines
accesslog.format            = "%h:%p %V %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\""

server.modules += ( "mod_openssl" )
var.cadir = rootroot + "/cadir"

ssl.engine                  = "enable"
ssl.pemfile                 = cadir + "/example.com.pem"
# turn off p-384 so we can easily trigger HRR
ssl.openssl.ssl-conf-cmd = ("Ciphersuites" => "TLS_AES_128_GCM_SHA256", "MinProtocol" => "TLSv1.3", "Curves" => "x25519")
ssl.ech-opts = (
  "keydir" => rootroot + "/echkeydir",
  "refresh" => 3600, # reload hourly
  # "refresh" => 60,    # reload every minute (testing)
  # "refresh" => 0,            # never reload
  # (minimum check interval is actually 64 seconds (2^6))

  # trial decryption allows clients to hide better by not sending real digests
  # that is turned on by default (as we're likely a small server so no harm and
  # better privacy), but you can disable it...
  #"trial-decrypt" => "disable",
)

$HTTP["host"] == "foo.example.com" {
    ssl.pemfile                 = cadir + "/foo.example.com.pem"
}

$SERVER["socket"] == ":3480" {
    ssl.engine                  = "disable"
}

$SERVER["socket"] == ":3482" {
    ssl.pemfile                 = cadir + "/foo.example.com.pem"
}

$SERVER["socket"] == ":3484" {
    ssl.pemfile                 = cadir + "/foo.example.com.pem"
}

$SERVER["socket"] == ":3485" {
    server.document-root = rootroot + "/lighttpd/dir-example.com"
}
